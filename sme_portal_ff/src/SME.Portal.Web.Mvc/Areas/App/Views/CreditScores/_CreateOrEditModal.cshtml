
@using System.Globalization
@using SME.Portal.Web.Areas.App.Models.Common.Modals
@using SME.Portal.Web.Areas.App.Models.CreditScores
@model CreateOrEditCreditScoreModalViewModel

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditCreditScore")) : L("CreateNewCreditScore")))

<div class="modal-body">
        <div id="CreditScoreInformationsTab">
            <form name="CreditScoreInformationsForm" role="form" novalidate class="form-validation">

                @if (Model.IsEditMode)
                {
                    <input type="hidden" name="id" value="@Model.CreditScore.Id" />
                }

				            
								<div class="form-group m-form__group">
										<label for="UserName">@L("User")</label>
									    <div class="input-group">
											<input class="form-control" id="UserName" name="userName" value="@Model.UserName" type="text" disabled>
										<div class="input-group-append">
											<button class="btn btn-primary blue" id="OpenUserLookupTableButton" type="button"><i class="fa fa-search"></i> @L("Pick")</button>
										</div> 
										<div class="input-group-prepend">
											<button class="btn btn-danger btn-icon" type="button" id="ClearUserNameButton"><i class="fa fa-times"></i></button>
										</div>
									</div>
								</div>

								@if (Model.IsEditMode)
								{
									<input class="form-control" id="CreditScore_UserId" value="@Model.CreditScore.UserId" type="text" name="userId" required hidden/>
								}
								 else
								{ 
									<input class="form-control" id="CreditScore_UserId" value="" type="text" name="userId" required hidden/>
								}



				
								<div class="form-group">
									<label for="CreditScore_Score">@L("Score")</label>
									<input class="form-control m-input" id="CreditScore_Score" value="@Model.CreditScore.Score.ToString(CultureInfo.InvariantCulture)" type="number" name="score"  />
								</div>
					
								<div class="form-group">
									<label for="CreditScore_EnquiryDate">@L("EnquiryDate")</label>
									<input class="form-control m-input date-picker" id="CreditScore_EnquiryDate" type="text" name="enquiryDate" value="@Model.CreditScore.EnquiryDate"/>
								</div>
					

            </form>
        </div>
</div>

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")
